sudo: required
language: node_js
node_js:
  - 12.13
branches:
  only:
    - server-master
    - client-master
    - server-develop
    - client-develop
services:
  - docker
env:
  global:
    - IMAGE_NAME=test
    - IMAGE_TAG=0.0.1
    - DOCKER_USER=jdd04026
    - secure: B2A5EkMfMm88KX+y/nXKaVz9+TfrLCY7Fw6jbkrmPzQ3N7IIMBDOE5g0YNCA+kpJTTJmMCVIKji28c5C8x0dlCPb9htDzZ4nLoQi5QtxtAigyTORrXjy/wkVuNa0GuLUMV5VAZOn2vjqMFfX94lwSAnGAs9+S0u5ZRvYPH2X0NddajgJGVYW0g9mN6V+IepOT/nO9ecxCwSLS9Cak8b/tCRlpOAoUlbeb8t8uvPFiIwqPWmAs3PjRJHDIGzTzek/6S5X+jGXqxGUhRJemzGxM4egy+Zw/UZIoReiU3M89cvjDZS5CPh4H3U/asQu3+Or2fDbk9xdppmS4C/MmHHF/jj7zqzH51byxLbQdqJgSUJCLX8+I6dhjkXLlG2BhpM6g6DQgrYVTDK6TziLGetHW/dXG8+ZunR+HmtIcp9Qt0Bu+zAwkvYXXPAYqeRv/+5XPkUdQXYdkSC/zliASdotIagznhn9xs7f3qdnPCfN4iR5oUMm8WdJ/0wnIfvxgKnSU6Nm0FdtQHFe0QvzN9CuWl+yHT2oOQlRc5IHYDFO2yOpV9/6uoOaB9kPXgeDaElWL2rNwvvYSXBR/T4/ejaSy6JWkuiwEHWSNeoL8IvrPfGOCGoRf2xIA/heFCzNuT6/o+wAYTRDmHYhmM3P624hevf7YJD6Ta/trhpe6JfugNQ=
    - CLIENT_URL=http://localhost:3000
    - API_URL=http://localhost:13000
    - CLIENT_ID=89261830012-cobrenh5fepq64nhj54jcdthoit1tjom.apps.googleusercontent.com
    - secure: Zb2HiLM/eq+bFlU1iV5djvVC9cN56tXjprEPDnWU2n1b0jaBJ3502kJpHLGtupCeVqnqzWrs16qsX85S8n/V6M3EqUGMDnKG7BV3VQfxheIu0BNGo30cjxBUTwuZNP+e5aybyEDrvpDOjzrs7kPMkNZfXraCgVV/IfOkjZKXps5mO5dZacxNWEfQZB9UfTW/YSGJ8i3QZ5sM4v29QCulUs9VPAAY0fypvBs3FKemWZincD4QVGqtXAK2Cex1Lpfc1Q8gvQA0g/HZRlBnbt73Z6qyVHGkzxEciMS2vOtfONbdKf4o1NZLjhSoSg11JaFNbXDitMhLycqCXgCcdS8GEwqoh5EtkJm7zNgf25KgiCdV+jqhEQnBRSurnLR1m+j9m0In2LjIzRV4z/DxvjBtBj304QUVRuNFiVmZJ9ZNf2RobX5u4ntA1lHD40aHpCCR2Z4yiFgUZtGEamzjdBq6xaPHaLApytxLPvgK/tKIuF+fi45PvdaXNRVrWdP53S+rtW1tDx7zVJ8m0MRb0t1uabMXWUYM+zI3izrH9it+aIG8i1lFkiCK00IU9M5XnMYCwRqmS+jbBYu8VUht6cO2AtM12Xh2gl0TkORG/FI3yjWmMskeDXof+0LtJoRYOjBhAa2kTKMqmmuUwZKFh66thkShOLCZXS7ohPtk2yEUN1k=

jobs:
  include:
    - stage: Server Deploy
      if: branch = server-develop OR branch = server-master
      before_script:
        - yarn
      script:
        - yarn test:server
      deploy:
        provider: script
        script:
          - docker build -t "${DOCKER_USER}/${IMAGE_NAME}:${IMAGE_TAG}" ./server
          - echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin;
          - docker tag "${DOCKER_USER}/${IMAGE_NAME}:${IMAGE_TAG}" "${DOCKER_USER}/${IMAGE_NAME}:latest"
          - docker push "${DOCKER_USER}/${IMAGE_NAME}:latest" && docker push "${DOCKER_USER}/${IMAGE_NAME}:${IMAGE_TAG}"
        on:
          branch: server-master
    - stage: Server Feature
      if: head_branch = server-develop
      before_script:
        - yarn
      script:
        - yarn test:server
    - stage: Client Deploy
      if: branch = client-develop OR branch = client-master
      install:
        - npm install
      script:
        - npm run test:src && npm run test:cypress
      deploy:
        provider: script
        script:
        on:
          branch: client-master
    - stage: Client Feature
      if: head_branch = client-develop
      install:
        - npm install
      script:
        - npm run test:src && npm run test:cypress

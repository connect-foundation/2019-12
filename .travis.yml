stages:
  - name: TEST
  - name: PRE_DEPLOY
    if: type = push AND branch = develop
  - name: DEPLOY
    if: type = push AND branch = master

sudo: required
language: node_js
node_js:
  - 12.13
branches:
  only:
    - master
    - develop
services:
  - docker
env:
  global:
    - FE_IMAGE_TAG=0.7.0
    - BE_IMAGE_TAG=0.7.0
    - RESERVE_IMAGE_TAG=0.7.0
    - DOCKER_USER=jdd04026
    - secure: G9ePamZpTrvw0r11Md6Ydq88XjKvQkV5wInwbTgdnIQq9v6BY53ingtwjiKFvCiIzkPpZlmmw7UGKLZG/JYav6p7ZiFg4eaf8M992Pd4xXemT8ycegdtwkZeK7cbYQs0P45HUcfob9/mO0nGLbLGevkdjQf99EsFXLCihLgV5MX6cp/0a5bmA6Ht/dSp6P+kZRAt2l8zbTQZnjLS/3NNEIXzWGvpT+5wHDoyFMenkXrVcH9mFUla9oNKiUqKjo5GzM5keDJFdm1aUj60OemwpgnLWJKIIR5LaaY6rh9zCJTj5+hk85T2AXKI9cmyE/2zFRKVDoUYaquWVgA52zGOhcO0K3ragm8brgnr5a581YkrU/PKm/gzGaz2jQsSog7yyBdJbnSpN9NAzFpH9IukAt9aEgP2dTJumydkUL8sI5p9MWA1K999O6VXSba5VQ9f0Rn5Pj7rTHpQpVX8Hra27q006QqoUY/ImBxyk7LV/4e/J/b9MEP35sUIaootmbmAYvHoeRNxbD8OiHD4lXWjvooWigXWCRSjK0uIm6h1Qsjg2yp36aX/uhcL3W6dDio61AQFs+ZtseCeiHsNUxjiZl3WIOctHmpftM9UBN/y4Sxr4JHa3ACg5mYFzUR2JxspbeA+clGxywWhltWs5B39h1lub0zobFlrG+a/7v4onLE=

before_install:
  - openssl aes-256-cbc -K $encrypted_06ff6f52811b_key -iv $encrypted_06ff6f52811b_iv
    -in secrets.tar.enc -out secrets.tar -d
  - tar xvf secrets.tar
  - docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"

jobs:
  include:
    - stage: TEST
      name: Reserve Server
      install:
        - docker run --name mysql -d -e MYSQL_ROOT_PASSWORD=$DB_PW -e MYSQL_DATABASE=$DB_NAME
          -e MYSQL_USER=$DB_USER -e MYSQL_PASSWORD=$DB_PW -p 3306:3306 jdd04026/mariadb-locale:latest
        - docker run --name redis -d -p 6379:6379 redis:5.0.7-alpine
      before_script:
        - yarn
      script:
        - yarn workspace server db:migrate
        - yarn workspace server db:seed
        - yarn workspace server redis:migrate
        - yarn test:reserve-server
    - name: Server
      install:
        - docker run --name mysql -d -e MYSQL_ROOT_PASSWORD=$DB_PW -e MYSQL_DATABASE=$DB_NAME
          -e MYSQL_USER=$DB_USER -e MYSQL_PASSWORD=$DB_PW -p 3306:3306 jdd04026/mariadb-locale:latest
        - docker run --name redis -d -p 6379:6379 redis:5.0.7-alpine
      before_script:
        - yarn
      script:
        - yarn workspace server db:migrate
        - yarn workspace server db:seed
        - yarn workspace server redis:migrate
        - yarn test:server seed
        - yarn workspace server test:noseed
    - name: Client
      before_script:
        - yarn
      script:
        - yarn test:client
    - stage: PRE_DEPLOY
      name: Reserve Server
      script:
        - docker build -t "${DOCKER_USER}/${RESERVE_IMAGE_NAME}":pre_release ./reserve-server
        - docker push "${DOCKER_USER}/${RESERVE_IMAGE_NAME}":pre_release
    - name: Server
      script:
        - docker build -t "${DOCKER_USER}/${BE_IMAGE_NAME}":pre_release ./server
        - docker push "${DOCKER_USER}/${BE_IMAGE_NAME}":pre_release
    - name: Client
      script:
        - yarn workspace client build
        - docker build -t "${DOCKER_USER}/${FE_IMAGE_NAME}":pre_release ./client
        - docker push "${DOCKER_USER}/${FE_IMAGE_NAME}":pre_release
    - stage: DEPLOY
      name: Reserve Server
      script:
        - docker build -t "${DOCKER_USER}/${RESERVE_IMAGE_NAME}:${RESERVE_IMAGE_TAG}"
          ./reserve-server
        - docker tag "${DOCKER_USER}/${RESERVE_IMAGE_NAME}:${RESERVE_IMAGE_TAG}" "${DOCKER_USER}/${RESERVE_IMAGE_NAME}:latest"
        - docker push "${DOCKER_USER}/${RESERVE_IMAGE_NAME}:latest" && docker push "${DOCKER_USER}/${RESERVE_IMAGE_NAME}:${RESERVE_IMAGE_TAG}"
    - name: Server
      script:
        - docker build -t "${DOCKER_USER}/${BE_IMAGE_NAME}:${BE_IMAGE_TAG}" ./server
        - docker tag "${DOCKER_USER}/${BE_IMAGE_NAME}:${BE_IMAGE_TAG}" "${DOCKER_USER}/${BE_IMAGE_NAME}:latest"
        - docker push "${DOCKER_USER}/${BE_IMAGE_NAME}:latest" && docker push "${DOCKER_USER}/${BE_IMAGE_NAME}:${BE_IMAGE_TAG}"
    - name: Client
      script:
        - yarn workspace client build
        - docker build -t "${DOCKER_USER}/${FE_IMAGE_NAME}:${FE_IMAGE_TAG}" ./client
        - docker tag "${DOCKER_USER}/${FE_IMAGE_NAME}:${FE_IMAGE_TAG}" "${DOCKER_USER}/${FE_IMAGE_NAME}:latest"
        - docker push "${DOCKER_USER}/${FE_IMAGE_NAME}:latest" && docker push "${DOCKER_USER}/${FE_IMAGE_NAME}:${FE_IMAGE_TAG}"

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Atom / Btn [SNAPSHOT] Anchor 렌더링 1`] = `
.c0 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  width: 18rem;
  height: 4rem;
  line-height: 1.4rem;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  cursor: pointer;
  pointer-events: auto;
  -webkit-user-drag: none;
  display: inline-block;
  padding: 1.2rem 2rem;
  border-radius: 0.3rem;
  border-color: transparent;
  outline: none;
  text-align: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-transition: opacity ease 0.2s,background-color ease 0.2s,color ease 0.2s;
  transition: opacity ease 0.2s,background-color ease 0.2s,color ease 0.2s;
  border-style: solid;
  border-width: thin;
}

<Btn
  href="https://naver.com"
  styletype="primary"
>
  <styled.a
    customProps={
      Object {
        "fit": false,
        "grow": false,
      }
    }
    href="https://naver.com"
    styletype="primary"
  >
    <StyledComponent
      customProps={
        Object {
          "fit": false,
          "grow": false,
        }
      }
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  ",
              "
  ",
              [Function],
              "
  flex-grow: ",
              [Function],
              ";
  width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  line-height: 1.4rem;
  background-color: ",
              [Function],
              ";
  flex-shrink: 0;
  cursor: ",
              [Function],
              ";
  pointer-events: ",
              [Function],
              ";
  color: ",
              [Function],
              ";
  -webkit-user-drag: none;
  display: inline-block;
  padding: 1.2rem 2rem;
  border-radius: 0.3rem;
  border-color: ",
              [Function],
              ";
  outline: none;
  text-align: center;
  user-select: none;
  transition: opacity ease 0.2s, background-color ease 0.2s, color ease 0.2s;
  border-style: solid;
  border-width: thin;

  &:hover {
    opacity: ",
              [Function],
              ";
    ",
              [Function],
              "
  }
",
              "
",
            ],
          },
          "displayName": "styled.a",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "a",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      href="https://naver.com"
      styletype="primary"
    >
      <a
        className="c0"
        href="https://naver.com"
      >
        Button
      </a>
    </StyledComponent>
  </styled.a>
</Btn>
`;

exports[`Atom / Btn [SNAPSHOT] StyledBtn 렌더링 1`] = `
.c0 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  width: 18rem;
  height: 4rem;
  line-height: 1.4rem;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  cursor: pointer;
  pointer-events: auto;
  -webkit-user-drag: none;
  display: inline-block;
  padding: 1.2rem 2rem;
  border-radius: 0.3rem;
  border-color: transparent;
  outline: none;
  text-align: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-transition: opacity ease 0.2s,background-color ease 0.2s,color ease 0.2s;
  transition: opacity ease 0.2s,background-color ease 0.2s,color ease 0.2s;
  border-style: solid;
  border-width: thin;
  line-height: 0;
}

<Btn
  styletype="primary"
>
  <styled.button
    customProps={
      Object {
        "fit": false,
        "grow": false,
      }
    }
    styletype="primary"
  >
    <StyledComponent
      customProps={
        Object {
          "fit": false,
          "grow": false,
        }
      }
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  ",
              "
  ",
              [Function],
              "
  flex-grow: ",
              [Function],
              ";
  width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  line-height: 1.4rem;
  background-color: ",
              [Function],
              ";
  flex-shrink: 0;
  cursor: ",
              [Function],
              ";
  pointer-events: ",
              [Function],
              ";
  color: ",
              [Function],
              ";
  -webkit-user-drag: none;
  display: inline-block;
  padding: 1.2rem 2rem;
  border-radius: 0.3rem;
  border-color: ",
              [Function],
              ";
  outline: none;
  text-align: center;
  user-select: none;
  transition: opacity ease 0.2s, background-color ease 0.2s, color ease 0.2s;
  border-style: solid;
  border-width: thin;

  &:hover {
    opacity: ",
              [Function],
              ";
    ",
              [Function],
              "
  }
",
              "
  line-height: 0;
",
            ],
          },
          "displayName": "styled.button",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": "button",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      styletype="primary"
    >
      <button
        className="c0"
      >
        Button
      </button>
    </StyledComponent>
  </styled.button>
</Btn>
`;

exports[`Atom / Btn [SNAPSHOT] StyledLink 렌더링 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Switch />
  </Router>
</BrowserRouter>
`;

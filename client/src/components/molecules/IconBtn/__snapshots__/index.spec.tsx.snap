// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Atom / IconBtn [SNAPSHOT] with circular img 렌더링 1`] = `
.c6 {
  height: 1.5rem;
}

.c3 {
  height: 3rem;
  border-radius: 50%;
}

.c8 {
  display: none;
}

.c9 .c2 {
  margin-right: 1rem;
}

.c9 .c7 {
  margin-left: 1rem;
}

.c9 .c5 {
  margin-left: 1rem;
}

.c9:hover .c5 {
  display: inline-block;
}

.c0 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  width: 18rem;
  height: 4rem;
  line-height: 1.4rem;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  cursor: pointer;
  pointer-events: auto;
  -webkit-user-drag: none;
  display: inline-block;
  padding: 1.2rem 2rem;
  border-radius: 0.3rem;
  border-color: transparent;
  outline: none;
  text-align: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-transition: opacity ease 0.2s,background-color ease 0.2s,color ease 0.2s;
  transition: opacity ease 0.2s,background-color ease 0.2s,color ease 0.2s;
  border-style: solid;
  border-width: thin;
  display: inline-table;
  vertical-align: middle;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c0 .c2 {
  margin-right: 1rem;
}

.c0 .c7 {
  margin-left: 1rem;
}

.c0 .c5 {
  margin-left: 1rem;
}

.c0:hover .c5 {
  display: none;
}

.c0:hover .c7 {
  display: inline-block;
}

.c4 {
  line-height: initial;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

<IconBtn
  circleImgSrc="https://cf.festa.io/default-images/host-profiles/Profile-00047.jpg"
  content="IconButtonWithCircleImg"
  height="2rem"
  hoveredIconSrc="external-link-colored.svg"
  iconSrc="external-link-black.svg"
  styletype="transparent-hover"
>
  <styled.div
    fullid={false}
    hoveredIconSrc="external-link-colored.svg"
    styletype="transparent-hover"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-gzVnrw",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  ",
              "
  ",
              [Function],
              "
  flex-grow: ",
              [Function],
              ";
  width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  line-height: 1.4rem;
  background-color: ",
              [Function],
              ";
  flex-shrink: 0;
  cursor: ",
              [Function],
              ";
  pointer-events: ",
              [Function],
              ";
  color: ",
              [Function],
              ";
  -webkit-user-drag: none;
  display: inline-block;
  padding: 1.2rem 2rem;
  border-radius: 0.3rem;
  border-color: ",
              [Function],
              ";
  outline: none;
  text-align: center;
  user-select: none;
  transition: opacity ease 0.2s, background-color ease 0.2s, color ease 0.2s;
  border-style: solid;
  border-width: thin;

  &:hover {
    opacity: ",
              [Function],
              ";
    ",
              [Function],
              "
  }
",
              "
  display: inline-table;
  vertical-align: middle;
  width: ",
              [Function],
              ";
  flex-grow: 1;

  ",
              ".c2",
              " {
    margin-right: 1rem;
  }

  ",
              ".c7",
              " {
    margin-left: 1rem;
  }

  ",
              ".c5",
              " {
    margin-left: 1rem;
  }

  &:hover {
    ",
              ".c5",
              " {
      display: ",
              [Function],
              ";
    }

    ",
              ".c7",
              " {
      display: ",
              [Function],
              ";
    }
  }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-gzVnrw",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      fullid={false}
      hoveredIconSrc="external-link-colored.svg"
      styletype="transparent-hover"
    >
      <div
        className="c0"
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-dnqmqq",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-dnqmqq",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              <Styled(Icon)
                alt="icon"
                circular={true}
                height="3rem"
                src="https://cf.festa.io/default-images/host-profiles/Profile-00047.jpg"
              >
                <StyledComponent
                  alt="icon"
                  circular={true}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "c2",
                        "isStatic": false,
                        "lastClassName": "cFlEyZ",
                        "rules": Array [],
                      },
                      "displayName": "Styled(Icon)",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "c2",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  height="3rem"
                  src="https://cf.festa.io/default-images/host-profiles/Profile-00047.jpg"
                >
                  <Icon
                    alt="icon"
                    circular={true}
                    className="c2 "
                    height="3rem"
                    src="https://cf.festa.io/default-images/host-profiles/Profile-00047.jpg"
                  >
                    <styled.img
                      alt="icon"
                      circular={true}
                      className="c2 "
                      height="3rem"
                      src="https://cf.festa.io/default-images/host-profiles/Profile-00047.jpg"
                    >
                      <StyledComponent
                        alt="icon"
                        circular={true}
                        className="c2 "
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c6",
                              "rules": Array [
                                "
  height: ",
                                [Function],
                                ";
  border-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.img",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "img",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        height="3rem"
                        src="https://cf.festa.io/default-images/host-profiles/Profile-00047.jpg"
                      >
                        <img
                          alt="icon"
                          className="c3 c2 "
                          height="3rem"
                          src="https://cf.festa.io/default-images/host-profiles/Profile-00047.jpg"
                        />
                      </StyledComponent>
                    </styled.img>
                  </Icon>
                </StyledComponent>
              </Styled(Icon)>
              <styled.span>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htoDjs",
                        "isStatic": false,
                        "lastClassName": "c4",
                        "rules": Array [
                          "
  line-height: initial;
",
                        ],
                      },
                      "displayName": "styled.span",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htoDjs",
                      "target": "span",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <span
                    className="c4"
                  >
                    IconButtonWithCircleImg
                  </span>
                </StyledComponent>
              </styled.span>
              <Styled(Icon)
                alt="icon"
                height="1.5rem"
                src="external-link-black.svg"
              >
                <StyledComponent
                  alt="icon"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "c5",
                        "isStatic": false,
                        "lastClassName": "bOrPFB",
                        "rules": Array [],
                      },
                      "displayName": "Styled(Icon)",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "c5",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  height="1.5rem"
                  src="external-link-black.svg"
                >
                  <Icon
                    alt="icon"
                    className="c5 "
                    height="1.5rem"
                    src="external-link-black.svg"
                  >
                    <styled.img
                      alt="icon"
                      className="c5 "
                      height="1.5rem"
                      src="external-link-black.svg"
                    >
                      <StyledComponent
                        alt="icon"
                        className="c5 "
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c6",
                              "rules": Array [
                                "
  height: ",
                                [Function],
                                ";
  border-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.img",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "img",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        height="1.5rem"
                        src="external-link-black.svg"
                      >
                        <img
                          alt="icon"
                          className="c6 c5 "
                          height="1.5rem"
                          src="external-link-black.svg"
                        />
                      </StyledComponent>
                    </styled.img>
                  </Icon>
                </StyledComponent>
              </Styled(Icon)>
              <Styled(Icon)
                alt="icon"
                height="1.5rem"
                src="external-link-colored.svg"
              >
                <StyledComponent
                  alt="icon"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "c7",
                        "isStatic": false,
                        "lastClassName": "c8",
                        "rules": Array [
                          "
  display: none;
",
                        ],
                      },
                      "displayName": "Styled(Icon)",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "c7",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  height="1.5rem"
                  src="external-link-colored.svg"
                >
                  <Icon
                    alt="icon"
                    className="c7 c8"
                    height="1.5rem"
                    src="external-link-colored.svg"
                  >
                    <styled.img
                      alt="icon"
                      className="c7 c8"
                      height="1.5rem"
                      src="external-link-colored.svg"
                    >
                      <StyledComponent
                        alt="icon"
                        className="c7 c8"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c6",
                              "rules": Array [
                                "
  height: ",
                                [Function],
                                ";
  border-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.img",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "img",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        height="1.5rem"
                        src="external-link-colored.svg"
                      >
                        <img
                          alt="icon"
                          className="c6 c7 c8"
                          height="1.5rem"
                          src="external-link-colored.svg"
                        />
                      </StyledComponent>
                    </styled.img>
                  </Icon>
                </StyledComponent>
              </Styled(Icon)>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</IconBtn>
`;

exports[`Atom / IconBtn [SNAPSHOT] 렌더링 1`] = `
.c4 {
  height: 1.5rem;
}

.c0 {
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  width: 18rem;
  height: 4rem;
  line-height: 1.4rem;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  cursor: pointer;
  pointer-events: auto;
  -webkit-user-drag: none;
  display: inline-block;
  padding: 1.2rem 2rem;
  border-radius: 0.3rem;
  border-color: transparent;
  outline: none;
  text-align: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-transition: opacity ease 0.2s,background-color ease 0.2s,color ease 0.2s;
  transition: opacity ease 0.2s,background-color ease 0.2s,color ease 0.2s;
  border-style: solid;
  border-width: thin;
  display: inline-table;
  vertical-align: middle;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c0 .c5 {
  margin-right: 1rem;
}

.c0 .c6 {
  margin-left: 1rem;
}

.c0 .c3 {
  margin-left: 1rem;
}

.c0:hover .c3 {
  display: inline-block;
}

.c2 {
  line-height: initial;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

<IconBtn
  content="IconButton"
  iconSrc="external-link-black.svg"
  styletype="primary"
>
  <styled.div
    fullid={false}
    styletype="primary"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-gzVnrw",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  ",
              "
  ",
              [Function],
              "
  flex-grow: ",
              [Function],
              ";
  width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  line-height: 1.4rem;
  background-color: ",
              [Function],
              ";
  flex-shrink: 0;
  cursor: ",
              [Function],
              ";
  pointer-events: ",
              [Function],
              ";
  color: ",
              [Function],
              ";
  -webkit-user-drag: none;
  display: inline-block;
  padding: 1.2rem 2rem;
  border-radius: 0.3rem;
  border-color: ",
              [Function],
              ";
  outline: none;
  text-align: center;
  user-select: none;
  transition: opacity ease 0.2s, background-color ease 0.2s, color ease 0.2s;
  border-style: solid;
  border-width: thin;

  &:hover {
    opacity: ",
              [Function],
              ";
    ",
              [Function],
              "
  }
",
              "
  display: inline-table;
  vertical-align: middle;
  width: ",
              [Function],
              ";
  flex-grow: 1;

  ",
              ".c5",
              " {
    margin-right: 1rem;
  }

  ",
              ".c6",
              " {
    margin-left: 1rem;
  }

  ",
              ".c3",
              " {
    margin-left: 1rem;
  }

  &:hover {
    ",
              ".c3",
              " {
      display: ",
              [Function],
              ";
    }

    ",
              ".c6",
              " {
      display: ",
              [Function],
              ";
    }
  }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-gzVnrw",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      fullid={false}
      styletype="primary"
    >
      <div
        className="c0"
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-dnqmqq",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-dnqmqq",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              <styled.span>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htoDjs",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  line-height: initial;
",
                        ],
                      },
                      "displayName": "styled.span",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htoDjs",
                      "target": "span",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <span
                    className="c2"
                  >
                    IconButton
                  </span>
                </StyledComponent>
              </styled.span>
              <Styled(Icon)
                alt="icon"
                height="1.5rem"
                src="external-link-black.svg"
              >
                <StyledComponent
                  alt="icon"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "c3",
                        "isStatic": false,
                        "lastClassName": "bOrPFB",
                        "rules": Array [],
                      },
                      "displayName": "Styled(Icon)",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "c3",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  height="1.5rem"
                  src="external-link-black.svg"
                >
                  <Icon
                    alt="icon"
                    className="c3 "
                    height="1.5rem"
                    src="external-link-black.svg"
                  >
                    <styled.img
                      alt="icon"
                      className="c3 "
                      height="1.5rem"
                      src="external-link-black.svg"
                    >
                      <StyledComponent
                        alt="icon"
                        className="c3 "
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bxivhb",
                              "isStatic": false,
                              "lastClassName": "c4",
                              "rules": Array [
                                "
  height: ",
                                [Function],
                                ";
  border-radius: ",
                                [Function],
                                ";
",
                              ],
                            },
                            "displayName": "styled.img",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bxivhb",
                            "target": "img",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        height="1.5rem"
                        src="external-link-black.svg"
                      >
                        <img
                          alt="icon"
                          className="c4 c3 "
                          height="1.5rem"
                          src="external-link-black.svg"
                        />
                      </StyledComponent>
                    </styled.img>
                  </Icon>
                </StyledComponent>
              </Styled(Icon)>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</IconBtn>
`;
